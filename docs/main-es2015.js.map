{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/auth/auth.service.ts","./src/environments/environment.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/services/zip/ZipService.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEkB;;;;;;;;AAQ7D,MAAM,iBAAiB;IAW5B,YAAoB,WAAwB,EAAU,QAAqB;QAAvD,gBAAW,GAAX,WAAW,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAa;QAVlE,kBAAa,GAAG,+CAA+C,CAAC;QAKlE,iBAAY,GAAc,IAAI,wDAAS,CAAC;YAC7C,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACzF,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAC/E,CAAC,CAAC;IAE2E,CAAC;IAE/E,QAAQ,KAAU,CAAC;IAEnB,WAAW;QAET,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CACxG,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,2BAA2B,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC/E,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC/D,CAAC,CACJ,CAAC;IAEJ,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK,EAAE;YAClG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC;IACpG,CAAC;;kFA/BU,iBAAiB;iGAAjB,iBAAiB;QCV9B,0EACE;QAD+B,yIAAU,iBAAa,IAAC;QACvD,yEACE;QAAA,sEACE;QAAA,oFACA;QAAA,4EAAW;QAAA,wEAAa;QAAA,4DAAY;QACpC,sEACA;QAAA,4DAAiB;QACnB,4DAAM;QACN,sEACE;QAAA,oFACA;QAAA,4EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEACA;QAAA,4DAAiB;QACjB,4EAAqB;QAAA,wDAAgB;QAAA,4DAAQ;QAC7C,4EAAuB;QAAA,wDAAkB;QAAA,4DAAQ;QACnD,4DAAM;QACR,4DAAM;QACN,6EAAsE;QAAA,8EAAkB;QAAA,4DAAS;QACjG,wEAA+C;QAAA,iEAAK;QAAA,4DAAI;QAC1D,4DAAO;;QAnBD,uFAA0B;QAKG,0DAAyC;QAAzC,sGAAyC;QAMtC,0DAA4C;QAA5C,yGAA4C;QAEvD,0DAAgB;QAAhB,iFAAgB;QACd,0DAAkB;QAAlB,mFAAkB;QAGE,0DAAsB;QAAtB,mFAAsB;;6FDP1D,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;;;;;;;;;AETkD;;;;;AAS5C,MAAM,WAAW;IAGtB,YAAmB,GAAqB,EAAS,MAAuB,EAAS,MAAc,EAAS,MAAc;QAAnG,QAAG,GAAH,GAAG,CAAkB;QAAS,WAAM,GAAN,MAAM,CAAiB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAQ;QACpH,yFAAyF;QACzF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACvC,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC5D,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;aAC1C;iBAAM;gBACL,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBACnC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;aAC1C;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,aAAa;QACf,OAAO,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;IAC3D,CAAC;IAED,8BAA8B;IAC9B,MAAM,CAAC,KAAK,EAAE,QAAQ;QACpB,OAAO,IAAI,CAAC,MAAM;aACf,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC;aAC3C,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE;gBACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,MAAM,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8BAA8B;IAC9B,MAAM,CAAC,KAAK,EAAE,QAAQ;QACpB,OAAO,IAAI,CAAC,MAAM;aACf,8BAA8B,CAAC,KAAK,EAAE,QAAQ,CAAC;aAC/C,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACf,wFAAwF;YACxF,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,MAAM,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAgD;IAC1C,oBAAoB;;YACxB,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;gBACvE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IAED,wBAAwB;IACxB,cAAc,CAAC,kBAAkB;QAC/B,OAAO,IAAI,CAAC,MAAM;aACf,sBAAsB,CAAC,kBAAkB,CAAC;aAC1C,IAAI,EAAE;aACN,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,MAAM,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4DAA4D;IAC5D,IAAI,UAAU;QACZ,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QACtD,OAAO,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC;IACzD,CAAC;IAED;+FAC2F;IAC3F,WAAW,CAAC,IAAI;QACd,MAAM,OAAO,GAAkC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QACjF,MAAM,QAAQ,GAAS;YACrB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,aAAa,EAAE,IAAI,CAAC,aAAa;SAClC,CAAC;QACF,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE;YAC3B,KAAK,EAAE,IAAI;SACZ,CAAC,CAAC;IACL,CAAC;IAED,WAAW;IACX,OAAO;QACL,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;YACrC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;;sEA9FU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;QACR,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,gCAAgC;QAC5C,WAAW,EAAE,uCAAuC;QACpD,SAAS,EAAE,gBAAgB;QAC3B,aAAa,EAAE,4BAA4B;QAC3C,iBAAiB,EAAE,cAAc;QACjC,KAAK,EAAE,2CAA2C;QAClD,aAAa,EAAE,cAAc;KAC/B;CACD,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACzBnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICSlD,oEAAsC;IAAA,uDAAc;IAAA,4DAAI;;;IAAlB,0DAAc;IAAd,wFAAc;;ADD7C,MAAM,kBAAkB;IAK7B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAH1C,iBAAY,GAAa,IAAI,CAAC;IAGgB,CAAC;IAE/C,QAAQ;IACR,CAAC;IAED,eAAe,CAAC,KAAe;QAC7B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,EAAE;YAC5D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACxD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YAE3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEzB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC9B,CAAC;;oFApBY,kBAAkB;kGAAlB,kBAAkB;QCR/B,yEACI;QAAA,2EAAkB;QAAA,sEAAW;QAAA,4DAAQ;QACrC,2EAIJ;QAFW,iJAAU,wCAAoC,IAAC;QAFtD,4DAIJ;QAAA,4DAAM;QAEN,4EAAW;QAAA,4EAAiB;QAAA,4DAAY;QACxC,0GAAsC;QACtC,4EAA2B;QAAA,mEAAO;QAAA,4DAAS;;QADxC,0DAAiC;QAAjC,qFAAiC;;6FDDvB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,iBAAiB,CAAC;KAC3B;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;6FDOlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAOpC,MAAM,SAAS;IACpB,YAAmB,MAAc,EACd,WAAwB;QADxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEhD,WAAW,CACT,IAA4B,EAC5B,KAA0B;QAC1B,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;YAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACjC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;kEAXU,SAAS;4FAAT,SAAS,WAAT,SAAS;6FAAT,SAAS;cADrB,wDAAU;;;;;;;;;;;;;;ACNX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACU;AACS;AACa;AACf;AACE;AACT;AACE;AACM;AACf;AACS;AACA;AACU;AACrB;AACO;;;AA0BhD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAE,6DAAS,EAAE,oEAAU,CAAE,YAd3B;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,6EAAiB;YACjB,0DAAW;YACX,sEAAc;YACd,gEAAiB,CAAC,aAAa,CAAC,yEAAW,CAAC,QAAQ,CAAC;YACrD,+EAAsB;YACtB,yEAAqB;YACrB,kEAAmB;YACnB,yEAAe;YACf,uEAAa;SACd;mIAIU,SAAS,mBAtBlB,2DAAY;QACZ,qEAAc;QACd,8EAAiB;QACjB,kFAAkB,aAGlB,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,6EAAiB;QACjB,0DAAW;QACX,sEAAc,oEAEd,+EAAsB;QACtB,yEAAqB;QACrB,kEAAmB;QACnB,yEAAe;QACf,uEAAa;6FAKJ,SAAS;cAxBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAc;oBACd,8EAAiB;oBACjB,kFAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,6EAAiB;oBACjB,0DAAW;oBACX,sEAAc;oBACd,gEAAiB,CAAC,aAAa,CAAC,yEAAW,CAAC,QAAQ,CAAC;oBACrD,+EAAsB;oBACtB,yEAAqB;oBACrB,kEAAmB;oBACnB,yEAAe;oBACf,uEAAa;iBACd;gBACD,SAAS,EAAE,CAAE,6DAAS,EAAE,oEAAU,CAAE;gBACpC,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC3CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEc;AACrB;AACS;AACS;;;AAGlE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,qEAAc;KAC1B;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,8EAAiB;KAC7B;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iFAAkB;QAC7B,WAAW,EAAE,CAAC,4DAAS,CAAC;KACzB;IACD;QACE,IAAI,EAAE,IAAI;QACV,SAAS,EAAE,qEAAc;KAC1B;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AAG0B;;;;;;;;AAO7D,MAAM,cAAc;IAQzB,YAAoB,WAAwB,EAAU,QAAqB;QAAvD,gBAAW,GAAX,WAAW,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAa;QAPlE,kBAAa,GAAG,+CAA+C,CAAC;QAElE,cAAS,GAAc,IAAI,wDAAS,CAAC;YAC1C,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACzF,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAC/E,CAAC,CAAC;IAE2E,CAAC;IAE/E,KAAK;QACH,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CACnG,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC9D,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC/D,CAAC,CACF,CAAC;IACJ,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK,EAAE;YAC5F,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC;IAC9F,CAAC;;4EAxBU,cAAc;8FAAd,cAAc;QCV3B,0EACE;QAD4B,sIAAU,WAAO,IAAC;QAC9C,yEACE;QAAA,uEAA8B;QAAA,mGAAwC;QAAA,4DAAI;QAC1E,sEACE;QAAA,oFACE;QAAA,4EAAW;QAAA,gEAAK;QAAA,4DAAY;QAC5B,sEACF;QAAA,4DAAiB;QACnB,4DAAM;QACN,sEACE;QAAA,qFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEACF;QAAA,4DAAiB;QACnB,4DAAM;QACN,0EACE;QAAA,wEAA6D;QAAA,2EAAe;QAAA,4DAAI;QAClF,4DAAM;QACR,4DAAM;QACN,6EAAmE;QAAA,iEAAK;QAAA,4DAAS;QACjF,wEAAqD;QAAA,8EAAkB;QAAA,4DAAI;QAC7E,4DAAO;;QArBD,oFAAuB;QAML,0DAAsC;QAAtC,mGAAsC;QAMtB,0DAAyC;QAAzC,sGAAyC;QAOnC,0DAAsB;QAAtB,mFAAsB;;6FDTvD,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAA2C;AACA;;AASpC,MAAM,UAAU;IAErB;QACE,GAAG,CAAC,iBAAiB,GAAG,UAAU,CAAC;IACrC,CAAC;IAED,UAAU,CAAC,IAAI;QACb,OAAO,IAAI,+CAAU,CAAC,UAAU,CAAC,EAAE;YACjC,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACxC,GAAG,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE;gBACnC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;oBAC7B,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACzB,UAAU,CAAC,QAAQ,EAAE,CAAC;gBACxB,CAAC,CAAC,CAAC;YACL,CAAC,EAAE,OAAO,CAAC,EAAE;gBACX,UAAU,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,KAAe;QACrB,MAAM,QAAQ,GAAG,IAAI,4CAAO,EAAmB,CAAC;QAChD,MAAM,IAAI,GAAG,IAAI,+CAAU,CAAO,UAAU,CAAC,EAAE;YAC7C,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,UAAU,EAAE,CAAC;YAEpC,sDAAsD;YACtD,0BAA0B;YACzB,KAAa,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;gBACpC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,UAAU,CAAC,QAAQ,EAAE,CAAC;gBACtB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;gBACpB,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IAC5B,CAAC;;oEApCU,UAAU;6FAAV,UAAU,WAAV,UAAU;6FAAV,UAAU;cADtB,wDAAU;;;;;;;;;;;;;;ACTX;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth/auth.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  readonly EMAIL_PATTERN = /^\\w+([\\+\\.-]?\\w+)@\\w+([\\.-]?\\w+)(\\.\\w{2,4})+$/;\n\n  public errorMessage: string;\n  public successMessage: string;\n\n  public registerForm: FormGroup = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.pattern(this.EMAIL_PATTERN)]),\n    password: new FormControl('', [Validators.required, Validators.maxLength(30)]),\n  });\n\n  constructor(private authService: AuthService, private snackBar: MatSnackBar) {}\n\n  ngOnInit(): void {}\n\n  tryRegister() {\n        \n    this.authService.signUp(this.registerForm.get('email').value , this.registerForm.get('password').value).then(\n        (res) => {\n          this.snackBar.open('Your account was created!', 'Close', { duration: 3000 });\n        },\n        (err) => {\n          this.snackBar.open(err.message, 'Close', { duration: 3000 });\n        }\n    );\n    \n  }\n\n  isEmpty(): boolean {\n    return this.registerForm.get('email').value == null || this.registerForm.get('email').value === '' ||\n    this.registerForm.get('password').value == null || this.registerForm.get('password').value === '';\n  }\n}\n","<form [formGroup]=\"registerForm\" (submit)=\"tryRegister()\" class=\"register-box\">\n  <div class=\"card--register form-group\">\n    <div>\n      <mat-form-field appearance=\"outline\">\n      <mat-label>Email address</mat-label>\n      <input matInput type=\"email\" [formControl]=\"registerForm.get('email')\" required>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field appearance=\"outline\">\n      <mat-label>Password</mat-label>\n      <input matInput type=\"password\" [formControl]=\"registerForm.get('password')\" required>\n      </mat-form-field>\n      <label class=\"error\">{{errorMessage}}</label>\n      <label class=\"success\">{{successMessage}}</label>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"button--register\" [disabled]=\"isEmpty()\">Create new account</button>\n  <a href=\"\" class=\"login\" routerLink=\"../login\">Login</a>\n</form>\n","import { Injectable, NgZone } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\nimport { User } from './models/user.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  userData: any;\n\n  constructor(public afs: AngularFirestore, public afAuth: AngularFireAuth, public router: Router, public ngZone: NgZone) {\n    /* Saving user data in localstorage when logged in and setting up null when logged out */\n    this.afAuth.authState.subscribe((user) => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user'));\n      } else {\n        localStorage.setItem('user', null);\n        JSON.parse(localStorage.getItem('user'));\n      }\n    });\n  }\n\n  get currentUserId(): string {\n    return (this.userData !== null) ? this.userData.uid : '';\n  }\n\n  // Sign in with email/password\n  signIn(email, password) {\n    return this.afAuth\n      .signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        this.ngZone.run(() => {\n          this.router.navigate(['dashboard']);\n        });\n        this.setUserData(result.user);\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  // Sign up with email/password\n  signUp(email, password) {\n    return this.afAuth\n      .createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        /* Call the sendVerificationMail() function when new user sign up and returns promise */\n        this.sendVerificationMail();\n        this.setUserData(result.user);\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  // Send email verification when new user sign up\n  async sendVerificationMail() {\n    return (await this.afAuth.currentUser).sendEmailVerification().then(() => {\n      this.router.navigate(['verification-mail']);\n    });\n  }\n\n  // Reset Forgot password\n  forgotPassword(passwordResetEmail) {\n    return this.afAuth\n      .sendPasswordResetEmail(passwordResetEmail)\n      .then()\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  // Returns true when user is looged in and email is verified\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));    \n    return (user !== null && user.emailVerified !== false);\n  }\n\n  /* Setting up user data when sign in with username/password, sign up with username/password and sign in with social auth\n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\n  setUserData(user) {\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      emailVerified: user.emailVerified,\n    };\n    return userRef.set(userData, {\n      merge: true,\n    });\n  }\n\n  // Sign out\n  signOut() {\n    return this.afAuth.signOut().then(() => {\n      localStorage.removeItem('user');\n      this.router.navigate(['login']);\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDf91NUyxSp_rJPMiFv_5sjYiskaxwvcLI\",\n    authDomain: \"metabolomicaia.firebaseapp.com\",\n    databaseURL: \"https://metabolomicaia.firebaseio.com\",\n    projectId: \"metabolomicaia\",\n    storageBucket: \"metabolomicaia.appspot.com\",\n    messagingSenderId: \"988668545430\",\n    appId: \"1:988668545430:web:70fe65f331065cdc7575b7\",\n    measurementId: \"G-B3CJ9BEW94\"\n }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ZipService } from '../services/zip/ZipService';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  fileToUpload: FileList = null;\n  data;\n\n  constructor(private zipService: ZipService) { }\n\n  ngOnInit() {\n  }\n\n  handleFileInput(files: FileList) {\n    this.zipService.getEntries(files[0]).subscribe((zipEntries) => {\n      this.data = this.zipService.getData(zipEntries[0]).data;\n      console.log(zipEntries[0]);\n      \n      console.log(this.data);\n      \n    });\n    \n    this.fileToUpload = files;\n}\n\n}\n","<div class=\"form-group\">\n    <label for=\"file\">Choose File</label>\n    <input type=\"file\"\n           id=\"file\"\n           (change)=\"handleFileInput($event.target.files)\"\n           multiple>\n</div>\n\n<mat-label>Arquivos Uploaded</mat-label>\n<p *ngFor=\"let file of fileToUpload\"> {{file.name}} </p>\n<button mat-raised-button> Submit </button>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'metabolomica-ia';\n}\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from '../services/auth/auth.service';\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(public router: Router,\n              public authService: AuthService) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (!this.authService.isLoggedIn) {      \n      this.router.navigate(['login']);\n    }\n    return true;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireModule } from '@angular/fire';\nimport { environment } from 'src/environments/environment';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { ZipService } from './services/zip/ZipService';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSnackBarModule,\n    FormsModule,\n    MatInputModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    BrowserModule\n  ],\n  providers: [ AuthGuard, ZipService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: '**',\n    component: LoginComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthService } from '../services/auth/auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n  readonly EMAIL_PATTERN = /^\\w+([\\+\\.-]?\\w+)@\\w+([\\.-]?\\w+)(\\.\\w{2,4})+$/;\n\n  public loginForm: FormGroup = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.pattern(this.EMAIL_PATTERN)]),\n    password: new FormControl('', [Validators.required, Validators.maxLength(30)]),\n  });\n\n  constructor(private authService: AuthService, private snackBar: MatSnackBar) {}\n\n  login() {    \n    this.authService.signIn(this.loginForm.get('email').value, this.loginForm.get('password').value).then(\n      (res) => {        \n        this.snackBar.open('Welcome!', 'Close', { duration: 3000 });\n      },\n      (err) => {        \n        this.snackBar.open(err.message, 'Close', { duration: 3000 });\n      }\n    );\n  }\n\n  isEmpty(): boolean {\n    return this.loginForm.get('email').value == null || this.loginForm.get('email').value === '' ||\n    this.loginForm.get('password').value == null || this.loginForm.get('password').value === '';\n  }\n}\n","<form [formGroup]=\"loginForm\" (submit)=\"login()\" class=\"login-box\">\n  <div class=\"card--login\">\n    <p style=\"text-align: center\">Type your e-mail and password to login: </p>\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Email</mat-label>\n        <input matInput [formControl]=\"loginForm.get('email')\">\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Password</mat-label>\n        <input matInput type=\"password\" [formControl]=\"loginForm.get('password')\">\n      </mat-form-field>\n    </div>\n    <div class=\"card--controls\">\n      <a href=\"\" class=\"forgot-link\" routerLink=\"../esqueci-senha\">Forgot password</a>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"button--login\" [disabled]=\"isEmpty()\">Login</button>\n  <a href=\"\" class=\"register\" routerLink=\"../register\">Create new account</a>\n</form>\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { ZipEntry } from './models/zip-entry.interface';\nimport { ZipTaskProgress } from './models/zip-task-progress.interface';\nimport { ZipTask } from './models/zip-task.interface';\n\n// This is added globally by the zip.js library\ndeclare const zip: any;\n\n@Injectable()\nexport class ZipService {\n\n  constructor() {\n    zip.workerScriptsPath = 'scripts/';\n  }\n\n  getEntries(file): Observable<Array<ZipEntry>> {\n    return new Observable(subscriber => {\n      const reader = new zip.BlobReader(file);\n      zip.createReader(reader, zipReader => {\n        zipReader.getEntries(entries => {\n          subscriber.next(entries);\n          subscriber.complete();\n        });\n      }, message => {\n        subscriber.error({ message });\n      });\n    });\n  }\n\n  getData(entry: ZipEntry): ZipTask {\n    const progress = new Subject<ZipTaskProgress>();\n    const data = new Observable<Blob>(subscriber => {\n      const writer = new zip.BlobWriter();\n\n      // Using `as any` because we don't want to expose this\n      // method in the interface\n      (entry as any).getData(writer, blob => {\n        subscriber.next(blob);\n        subscriber.complete();\n        progress.next(null);\n      }, (current, total) => {\n        progress.next({ active: true, current, total });\n      });\n    });\n    return { progress, data };\n  }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}