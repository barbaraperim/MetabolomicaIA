{"version":3,"sources":["webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/services/auth/auth.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/services/zip/ZipService.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["RegisterComponent","authService","snackBar","EMAIL_PATTERN","registerForm","email","required","pattern","password","maxLength","signUp","get","value","then","res","open","duration","err","message","tryRegister","selector","templateUrl","styleUrls","AuthService","afs","afAuth","router","ngZone","authState","subscribe","user","userData","localStorage","setItem","JSON","stringify","parse","getItem","signInWithEmailAndPassword","result","run","navigate","setUserData","error","createUserWithEmailAndPassword","sendVerificationMail","currentUser","sendEmailVerification","passwordResetEmail","sendPasswordResetEmail","userRef","doc","uid","displayName","emailVerified","set","merge","signOut","removeItem","providedIn","environment","production","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","DashboardComponent","zipService","fileToUpload","files","getEntries","zipEntries","data","getData","console","log","handleFileInput","AppComponent","title","AuthGuard","next","state","isLoggedIn","AppModule","initializeApp","declarations","imports","providers","bootstrap","routes","path","component","canActivate","AppRoutingModule","forRoot","exports","LoginComponent","loginForm","signIn","login","ZipService","zip","workerScriptsPath","file","subscriber","reader","BlobReader","createReader","zipReader","entries","complete","entry","progress","writer","BlobWriter","blob","current","total","active","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth/auth.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  readonly EMAIL_PATTERN = /^\\w+([\\+\\.-]?\\w+)@\\w+([\\.-]?\\w+)(\\.\\w{2,4})+$/;\n\n  public errorMessage: string;\n  public successMessage: string;\n\n  public registerForm: FormGroup = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.pattern(this.EMAIL_PATTERN)]),\n    password: new FormControl('', [Validators.required, Validators.maxLength(30)]),\n  });\n\n  constructor(private authService: AuthService, private snackBar: MatSnackBar) {}\n\n  ngOnInit(): void {}\n\n  tryRegister() {\n        \n    this.authService.signUp(this.registerForm.get('email').value , this.registerForm.get('password').value).then(\n        (res) => {\n          this.snackBar.open('Your account was created!', 'Close', { duration: 3000 });\n        },\n        (err) => {\n          this.snackBar.open(err.message, 'Close', { duration: 3000 });\n        }\n    );\n    \n  }\n\n  isEmpty(): boolean {\n    return this.registerForm.get('email').value == null || this.registerForm.get('email').value === '' ||\n    this.registerForm.get('password').value == null || this.registerForm.get('password').value === '';\n  }\n}\n","<form [formGroup]=\"registerForm\" (submit)=\"tryRegister()\" class=\"register-box\">\n  <div class=\"card--register form-group\">\n    <div>\n      <mat-form-field appearance=\"outline\">\n      <mat-label>Email address</mat-label>\n      <input matInput type=\"email\" [formControl]=\"registerForm.get('email')\" required>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field appearance=\"outline\">\n      <mat-label>Password</mat-label>\n      <input matInput type=\"password\" [formControl]=\"registerForm.get('password')\" required>\n      </mat-form-field>\n      <label class=\"error\">{{errorMessage}}</label>\n      <label class=\"success\">{{successMessage}}</label>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"button--register\" [disabled]=\"isEmpty()\">Create new account</button>\n  <a href=\"\" class=\"login\" routerLink=\"../login\">Login</a>\n</form>\n","import { Injectable, NgZone } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\nimport { User } from './models/user.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  userData: any;\n\n  constructor(public afs: AngularFirestore, public afAuth: AngularFireAuth, public router: Router, public ngZone: NgZone) {\n    /* Saving user data in localstorage when logged in and setting up null when logged out */\n    this.afAuth.authState.subscribe((user) => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user'));\n      } else {\n        localStorage.setItem('user', null);\n        JSON.parse(localStorage.getItem('user'));\n      }\n    });\n  }\n\n  get currentUserId(): string {\n    return (this.userData !== null) ? this.userData.uid : '';\n  }\n\n  // Sign in with email/password\n  signIn(email, password) {\n    return this.afAuth\n      .signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        this.ngZone.run(() => {\n          this.router.navigate(['dashboard']);\n        });\n        this.setUserData(result.user);\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  // Sign up with email/password\n  signUp(email, password) {\n    return this.afAuth\n      .createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        /* Call the sendVerificationMail() function when new user sign up and returns promise */\n        this.sendVerificationMail();\n        this.setUserData(result.user);\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  // Send email verification when new user sign up\n  async sendVerificationMail() {\n    return (await this.afAuth.currentUser).sendEmailVerification().then(() => {\n      this.router.navigate(['verification-mail']);\n    });\n  }\n\n  // Reset Forgot password\n  forgotPassword(passwordResetEmail) {\n    return this.afAuth\n      .sendPasswordResetEmail(passwordResetEmail)\n      .then()\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  // Returns true when user is looged in and email is verified\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));    \n    return (user !== null && user.emailVerified !== false);\n  }\n\n  /* Setting up user data when sign in with username/password, sign up with username/password and sign in with social auth\n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\n  setUserData(user) {\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      emailVerified: user.emailVerified,\n    };\n    return userRef.set(userData, {\n      merge: true,\n    });\n  }\n\n  // Sign out\n  signOut() {\n    return this.afAuth.signOut().then(() => {\n      localStorage.removeItem('user');\n      this.router.navigate(['login']);\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDf91NUyxSp_rJPMiFv_5sjYiskaxwvcLI\",\n    authDomain: \"metabolomicaia.firebaseapp.com\",\n    databaseURL: \"https://metabolomicaia.firebaseio.com\",\n    projectId: \"metabolomicaia\",\n    storageBucket: \"metabolomicaia.appspot.com\",\n    messagingSenderId: \"988668545430\",\n    appId: \"1:988668545430:web:70fe65f331065cdc7575b7\",\n    measurementId: \"G-B3CJ9BEW94\"\n }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ZipService } from '../services/zip/ZipService';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  fileToUpload: FileList = null;\n  data;\n\n  constructor(private zipService: ZipService) { }\n\n  ngOnInit() {\n  }\n\n  handleFileInput(files: FileList) {\n    this.zipService.getEntries(files[0]).subscribe((zipEntries) => {\n      this.data = this.zipService.getData(zipEntries[0]).data;\n      console.log(zipEntries[0]);\n      \n      console.log(this.data);\n      \n    });\n    \n    this.fileToUpload = files;\n}\n\n}\n","<div class=\"form-group\">\n    <label for=\"file\">Choose File</label>\n    <input type=\"file\"\n           id=\"file\"\n           (change)=\"handleFileInput($event.target.files)\"\n           multiple>\n</div>\n\n<mat-label>Arquivos Uploaded</mat-label>\n<p *ngFor=\"let file of fileToUpload\"> {{file.name}} </p>\n<button mat-raised-button> Submit </button>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'metabolomica-ia';\n}\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from '../services/auth/auth.service';\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(public router: Router,\n              public authService: AuthService) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (!this.authService.isLoggedIn) {      \n      this.router.navigate(['login']);\n    }\n    return true;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireModule } from '@angular/fire';\nimport { environment } from 'src/environments/environment';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { ZipService } from './services/zip/ZipService';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSnackBarModule,\n    FormsModule,\n    MatInputModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    BrowserModule\n  ],\n  providers: [ AuthGuard, ZipService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: '**',\n    component: LoginComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthService } from '../services/auth/auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n  readonly EMAIL_PATTERN = /^\\w+([\\+\\.-]?\\w+)@\\w+([\\.-]?\\w+)(\\.\\w{2,4})+$/;\n\n  public loginForm: FormGroup = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.pattern(this.EMAIL_PATTERN)]),\n    password: new FormControl('', [Validators.required, Validators.maxLength(30)]),\n  });\n\n  constructor(private authService: AuthService, private snackBar: MatSnackBar) {}\n\n  login() {    \n    this.authService.signIn(this.loginForm.get('email').value, this.loginForm.get('password').value).then(\n      (res) => {        \n        this.snackBar.open('Welcome!', 'Close', { duration: 3000 });\n      },\n      (err) => {        \n        this.snackBar.open(err.message, 'Close', { duration: 3000 });\n      }\n    );\n  }\n\n  isEmpty(): boolean {\n    return this.loginForm.get('email').value == null || this.loginForm.get('email').value === '' ||\n    this.loginForm.get('password').value == null || this.loginForm.get('password').value === '';\n  }\n}\n","<form [formGroup]=\"loginForm\" (submit)=\"login()\" class=\"login-box\">\n  <div class=\"card--login\">\n    <p style=\"text-align: center\">Type your e-mail and password to login: </p>\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Email</mat-label>\n        <input matInput [formControl]=\"loginForm.get('email')\">\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Password</mat-label>\n        <input matInput type=\"password\" [formControl]=\"loginForm.get('password')\">\n      </mat-form-field>\n    </div>\n    <div class=\"card--controls\">\n      <a href=\"\" class=\"forgot-link\" routerLink=\"../esqueci-senha\">Forgot password</a>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"button--login\" [disabled]=\"isEmpty()\">Login</button>\n  <a href=\"\" class=\"register\" routerLink=\"../register\">Create new account</a>\n</form>\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { ZipEntry } from './models/zip-entry.interface';\nimport { ZipTaskProgress } from './models/zip-task-progress.interface';\nimport { ZipTask } from './models/zip-task.interface';\n\n// This is added globally by the zip.js library\ndeclare const zip: any;\n\n@Injectable()\nexport class ZipService {\n\n  constructor() {\n    zip.workerScriptsPath = 'scripts/';\n  }\n\n  getEntries(file): Observable<Array<ZipEntry>> {\n    return new Observable(subscriber => {\n      const reader = new zip.BlobReader(file);\n      zip.createReader(reader, zipReader => {\n        zipReader.getEntries(entries => {\n          subscriber.next(entries);\n          subscriber.complete();\n        });\n      }, message => {\n        subscriber.error({ message });\n      });\n    });\n  }\n\n  getData(entry: ZipEntry): ZipTask {\n    const progress = new Subject<ZipTaskProgress>();\n    const data = new Observable<Blob>(subscriber => {\n      const writer = new zip.BlobWriter();\n\n      // Using `as any` because we don't want to expose this\n      // method in the interface\n      (entry as any).getData(writer, blob => {\n        subscriber.next(blob);\n        subscriber.complete();\n        progress.next(null);\n      }, (current, total) => {\n        progress.next({ active: true, current, total });\n      });\n    });\n    return { progress, data };\n  }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}